name: Build and deploy Function App & Static Web App
on:
  push:
    branches:
    - main
    - phjirsa/bicep
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: '1c642d88-5042-4d19-9d49-49be6612a40f'
  AZURE_RESOURCE_GROUP: 'rg-fhirwatch'
  AZURE_FUNCTIONAPP_NAME: FhirWatchApi20220815130348
  AZURE_FUNCTIONAPP_PACKAGE_PATH: FhirWatch.Api\published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: FhirWatch.Api
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"    
  provision:
    name: Provision Azure Resources
    runs-on: ubuntu-latest
    needs: build
    outputs:
      swaProperties: ${{ steps.deploy-bicep.outputs.swaProperties }}
      functionAppName: ${{ steps.deploy-bicep.outputs.functionAppName }}
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
    - name: Checkout
      uses: actions/checkout@v1
    - name: Deploy BICEP Template
      id: deploy-bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: ./templates/main.bicep 
        parameters: 'dataverseClientSecret="${{ secrets.DATAVERSE_CLIENT_SECRET }}"'  
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    needs: provision
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: 'Azure Login'
        uses: 'azure/login@v1'
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Run Azure CLI commands'
        id: get-swa-key
        run: |
          appName=$(echo '${{ needs.provision.outputs.swaProperties }}' | jq -r '.appName')
          echo "APIKEY=$(az staticwebapp secrets list -n $appName | jq -r '.properties.apiKey')" >> $GITHUB_OUTPUT
      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.provision.outputs.functionAppName }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.get-swa-key.outputs.APIKEY }}
          #repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "FhirWatch"
          api_location: ""
          output_location: "wwwroot"